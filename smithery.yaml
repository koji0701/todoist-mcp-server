# Smithery configuration file: https://smithery.ai/docs/build/project-config

startCommand:
  type: stdio
  commandFunction:
    # A JS function that produces the CLI command based on the given config to start the MCP on stdio.
    # TODOIST_API_TOKEN is now sourced from the environment within the Python process.
    |-
    (config) => ({ command: 'python', args: ['server.py'], env: { TRANSPORT: config.transport || 'stdio', PYTHONUNBUFFERED: '1', ...(config.transport === 'sse' ? { MCP_HOST: config.mcpHost, MCP_PORT: String(config.mcpPort) } : {}), ...(config.todoistApiToken ? { TODOIST_API_TOKEN: config.todoistApiToken } : {}) } })
  configSchema:
    # JSON Schema defining the configuration options for the MCP.
    type: object
    # todoistApiToken is no longer strictly required at startup for lazy loading.
    # It will be pulled from the environment by the MCP when a tool is called.
    # However, it's good practice to keep it here as an optional config
    # so users know it's something they might need to provide.
    properties:
      todoistApiToken:
        type: string
        description: Your Todoist API token (can also be set as an environment variable TODOIST_API_TOKEN)
      transport:
        type: string
        default: stdio
        description: "Transport mode: stdio or sse"
      mcpHost:
        type: string
        default: 127.0.0.1
        description: Host for SSE transport
      mcpPort:
        type: number
        default: 8080
        description: Port for SSE transport
  exampleConfig:
    # Token can be omitted here if set as an environment variable
    # todoistApiToken: your_todoist_api_token_here
    transport: stdio
    mcpHost: 127.0.0.1
    mcpPort: 8080